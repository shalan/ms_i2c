{
    "info": {
        "name": "I2C_wrapper",
        "description": "I2C master controller with an APB interface",
        "repo": "https://github.com/shalan/ms_i2c",
        "owner": "Mohamed Shalan",
        "license": "APACHE 2.0",
        "author": "Mohamed Shalan",
        "email": "mshalan@aucegypt.edu",
        "version": "v1.0.0",
        "date": "11-12-2023",
        "category": "digital",
        "tags": [
            "peripheral",
            "comm",
            "i2c"
        ],
        "bus": [
            "APB"
        ],
        "type": "soft",
        "status": "verified",
        "cell_count": "2344",
        "width": "0.0",
        "height": "0.0",
        "technology": "n/a",
        "clock_freq_mhz": "50",
        "digital_supply_voltage": "n/a",
        "analog_supply_voltage": "n/a"
    },
    "parameters": [
        {
          "name": "DEFAULT_PRESCALE",
          "default": 1,
          "description": "Default value for Prescale; prescale = Fclk / (FI2Cclk * 4)"
        },
        {
          "name": "FIXED_PRESCALE",
          "default": 0,
          "description": "Prescale value is fixed or could be dynamically configured"
        },
        {
          "name": "CMD_FIFO",
          "default": 1,
          "description": "Command AXI4 FIFO enable"
        },
        {
          "name": "CMD_FIFO_DEPTH",
          "default": 32,
          "description": "Command AXI4 FIFO depth"
        },
        {
          "name": "WRITE_FIFO",
          "default": 1,
          "description": "Write AXI4 FIFO enable"
        },
        {
          "name": "WRITE_FIFO_DEPTH",
          "default": 32,
          "description": "Write AXI4 FIFO depth"
        },
        {
          "name": "READ_FIFO",
          "default": 1,
          "description": "Read AXI4 FIFO enable"
        },
        {
          "name": "READ_FIFO_DEPTH",
          "default": 32,
          "description": "Read AXI4 FIFO depth"
        }
    ],
    "ports": [
        {
            "name": "clk", 
            "width": 1,
            "direction":"input"
        },
        {
            "name": "rst", 
            "width": 1, 
            "direction":"input"
        },
        {
            "name": "wbs_adr_i", 
            "width": 3, 
            "direction":"input"
        },
        {
            "name": "wbs_dat_i", 
            "width": 16, 
            "direction":"input"
        },
        {
            "name": "wbs_dat_o", 
            "width": 16, 
            "direction":"output"
        },
        {
            "name": "wbs_we_i", 
            "width": 1, 
            "direction":"input"
        },
        {
            "name": "wbs_sel_i", 
            "width": 2, 
            "direction":"input"
        },
        {
            "name": "wbs_stb_i", 
            "width": 1, 
            "direction":"input"
        },
        {
            "name": "wbs_ack_o",
            "width": 1,
            "direction":"output"
        },
        {
            "name": "wbs_cyc_i",
            "width": 1,
            "direction":"input"
        },
        {
            "name": "i2c_scl_i",
            "width": 1,
            "direction":"input"
        },
        {
            "name": "i2c_scl_o",
            "width": 1,
            "direction":"output"
        },
        {
            "name": "i2c_scl_t",
            "width": 1,
            "direction":"output"
        },
        {
            "name": "i2c_sda_i",
            "width": 1,
            "direction":"input"
        },
        {
            "name": "i2c_sda_o",
            "width": 1,
            "direction":"output"
        },
        {
            "name": "i2c_sda_t",
            "width": 1,
            "direction":"output"
        },
        {
            "name": "flags",
            "width": 16,
            "direction":"output"
        }
    ],
    "external_interface": [
        {
            "name": "scl_i",
            "port": "scl_i",
            "direction": "input",
            "width": 1
        },
        {
            "name": "scl_o",
            "port": "scl_o",
            "direction": "output",
            "width": 1
        },
        {
            "name": "scl_oen_o",
            "port": "scl_oen_o",
            "direction": "output",
            "width": 1
        },
        {
            "name": "sda_i",
            "port": "sda_i",
            "direction": "input",
            "width": 1
        },
        {
            "name": "sda_o",
            "port": "sda_o",
            "direction": "output",
            "width": 1
        },
        {
            "name": "sda_oen_o",
            "port": "sda_oen_o",
            "direction": "output",
            "width": 1
        },
        {
            "name": "i2c_irq",
            "port": "i2c_irq",
            "direction": "output",
            "width": 1
        }
    ],
    "clock": {
        "name": "clk"
    },
    "reset": {
        "name": "rst",
        "level": 1
    },
    "flags": [
        {
            "name": "BUSY",
            "port": "busy_int",
            "description": "High when module is performing an I2C operation"
        },
        {
            "name": "BUSCONT",
            "port": "bus_control_int",
            "description": "High when module has control of active bus"
        },
        {
            "name": "BUSACT",
            "port": "bus_active_int",
            "description": "High when bus is active"
        },
        {
            "name": "MISS_ACK",
            "port": "missed_ack_flag",
            "description": "Slave ACK is missed"
        },
        {
            "name": "CMDE",
            "port": "cmd_fifo_empty",
            "description": "Command FIFO is Empty"
        },
        {
            "name": "CMDF",
            "port": "cmd_fifo_full",
            "description": "Command FIFO is Full"
        },
        {
            "name": "CMDOVF",
            "port": "cmd_fifo_overflow_flag",
            "description": "Command FIFO overflow; write 1 to clear"
        },
        {
            "name": "WRE",
            "port": "write_fifo_empty",
            "description": "Write FIFO is Empty"
        },
        {
            "name": "WRF",
            "port": "write_fifo_full",
            "description": "Write FIFO is Full"
        },
        {
            "name": "WROVF",
            "port": "write_fifo_overflow_flag",
            "description": "Write FIFO overflow; write 1 to clear"
        },
        {
            "name": "RDE",
            "port": "read_fifo_empty",
            "description": "Read FIFO is Empty"
        },
        {
            "name": "RDF",
            "port": "read_fifo_full",
            "description": "Read FIFO is Full"
        }
    ]
}
